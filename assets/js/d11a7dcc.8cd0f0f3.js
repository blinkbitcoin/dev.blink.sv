"use strict";(self.webpackChunkdev_blink_sv=self.webpackChunkdev_blink_sv||[]).push([[7967],{6867:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=s(4848),i=s(8453);const o={id:"backend-servers",title:"Backend Servers",slug:"/self-host/deployment/backend-servers"},r="Backend Servers",l={id:"self-host/b-deployment/backend-servers",title:"Backend Servers",description:"Run locally",source:"@site/docs/self-host/b-deployment/b-backend-servers.md",sourceDirName:"self-host/b-deployment",slug:"/self-host/deployment/backend-servers",permalink:"/self-host/deployment/backend-servers",draft:!1,unlisted:!1,editUrl:"https://github.com/GaloyMoney/dev.blink.sv/edit/main/docs/self-host/b-deployment/b-backend-servers.md",tags:[],version:"current",frontMatter:{id:"backend-servers",title:"Backend Servers",slug:"/self-host/deployment/backend-servers"},sidebar:"selfHostSidebar",previous:{title:"Staging Environment",permalink:"/self-host/deployment/staging-environment"},next:{title:"Blink Pay",permalink:"/self-host/deployment/blink-pay"}},d={},c=[{value:"Run locally",id:"run-locally",level:2},{value:"How to expose the API including websocket subscriptions",id:"how-to-expose-the-api-including-websocket-subscriptions",level:2},{value:"How to run integration tests with Galoy as a dependency",id:"how-to-run-integration-tests-with-galoy-as-a-dependency",level:2},{value:"Known issues",id:"known-issues",level:2},{value:"Running checks",id:"running-checks",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"backend-servers",children:"Backend Servers"}),"\n",(0,t.jsx)(n.h2,{id:"run-locally",children:"Run locally"}),"\n",(0,t.jsxs)(n.p,{children:["Find how to run the backend servers locally in the ",(0,t.jsx)(n.a,{href:"https://github.com/GaloyMoney/blink#local-development-setup",children:"project readme"})]}),"\n",(0,t.jsx)(n.h2,{id:"how-to-expose-the-api-including-websocket-subscriptions",children:"How to expose the API including websocket subscriptions"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Run:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"buck2 run //dev:up\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Wait for api server to finish coming up, visible via the Tild dashboard at ",(0,t.jsx)(n.a,{href:"http://localhost:10350/",children:"http://localhost:10350/"})]}),"\n",(0,t.jsxs)(n.li,{children:["Go to ",(0,t.jsx)(n.a,{href:"https://studio.apollographql.com/sandbox/explorer?overlay=connection-settings",children:"https://studio.apollographql.com/sandbox/explorer?overlay=connection-settings"})]}),"\n",(0,t.jsxs)(n.li,{children:["Input the following strings for Endpoint and Subscriptions","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Endpoint: ",(0,t.jsx)(n.a,{href:"http://localhost:4455/graphql",children:"http://localhost:4455/graphql"})]}),"\n",(0,t.jsxs)(n.li,{children:["Subscriptions: ws://localhost:44455/graphql\n",(0,t.jsx)(n.img,{alt:"Apollo Studio configuration",src:s(4169).A+"",width:"673",height:"756"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For a fork, you can still use that same apollo studio link and configure the regular graphql endpoint and subscriptions endpoint separately."}),"\n",(0,t.jsx)(n.h2,{id:"how-to-run-integration-tests-with-galoy-as-a-dependency",children:"How to run integration tests with Galoy as a dependency"}),"\n",(0,t.jsxs)(n.p,{children:["Take a look at the ",(0,t.jsx)(n.a,{href:"https://github.com/GaloyMoney/blink/tree/main/quickstart",children:"Quickstart"})," if you want to take it for a spin."]}),"\n",(0,t.jsx)(n.h2,{id:"known-issues",children:"Known issues"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Test suite timeouts"}),": increase jest timeout value. Example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# 120 seconds\n$ JEST_TIMEOUT=120000 yarn test:integration\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Integration tests running slow"}),": we use docker to run dependencies (redis, mongodb, bitcoind and 4 lnds) so the entire test suite is disk-intensive."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Please make sure that you are running docker containers in a solid state drive (SSD)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Reduce lnd log disk usage: change debuglevel to critical"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# ./dev/lnd/lnd.conf\ndebuglevel=critical\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"running-checks",children:"Running checks"}),"\n",(0,t.jsx)(n.p,{children:"It's recommended that you use plugins in your editor to run ESLint checks and perform Prettier formatting on-save."}),"\n",(0,t.jsx)(n.p,{children:"If you need to run Prettier through the command line, you can use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ yarn prettier -w .\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},4169:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/backend_servers_apollo_config-88a7103e318c7d3d24b3d73dbd6dcd34.png"},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);